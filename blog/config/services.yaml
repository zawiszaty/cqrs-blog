parameters:

services:
    _defaults:
        autowire: true
        autoconfigure: true
        bind:
            $redisParams:
                scheme: tcp
                host: redis
                port: 6379

    _instanceof:
        App\Blog\Application\CommandHandlerInterface:
            tags: ['app.command_handler']

        App\Blog\Application\QueryHandlerInterface:
            tags: ['app.query']

    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    App\Blog\Infrastructure\Shared\ServiceBus\QueryBus:
        public: true

    App\Blog\Infrastructure\Shared\ServiceBus\CommandBus:
        public: true

    App\Blog\System:
        public: true

    App\Blog\Domain\Shared\Infrastructure\ORM\RedisAdapter:
        public: true

    App\Symfony\Controller\:
        resource: '../src/Symfony/Controller'
        tags: ['controller.service_arguments']

    app.projection.redis.add_category_projection:
        class: App\Blog\Infrastructure\Category\Repository\Projection\MysqlCategoryProjection
        tags:
            - { name: kernel.event_listener, event: app.projection.redis.add_category_projection, method: onCreateCategoryEvent }

    app.projection.redis.edit_category_projection:
        class: App\Blog\Infrastructure\Category\Repository\Projection\MysqlCategoryProjection
        tags:
            - { name: kernel.event_listener, event: app.projection.redis.edit_category_projection, method: onEditCategoryEvent }

    app.projection.redis.delete_category_projection:
        class: App\Blog\Infrastructure\Category\Repository\Projection\MysqlCategoryProjection
        tags:
            - { name: kernel.event_listener, event: app.projection.redis.delete_category_projection, method: onDeleteCategoryEvent }


